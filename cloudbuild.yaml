steps:
# Step 1: Build the Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/lateral-booking-419709/mysql-crud-with-node-js-api', '.']

# Step 2: Push the image to the Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/lateral-booking-419709/mysql-crud-with-node-js-api']

# Step 3: Deployment to Clusters using kubernetes with GKE 
- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'  # starting point or initial command for a program or script written in the shell scripting
  args:
  - -c   # used to specify the command that follows should be executed by the shell So, when you see "-c" followed by a command, it means that the shell will run that command
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
    gcloud deploy apply --file deploy/dev.yaml --region=us-central1
    gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --skaffold-file=./kubernetes/skaffold.yaml &&
    kubectl apply -f /kubernetes/secrets.yaml &&
    kubectl apply -f /kubernetes/volume.yaml
options:
  logging: CLOUD_LOGGING_ONLY  # Adjust logging option as per your requirements

  # kubectl apply -f secrets.yaml
  #   kubectl apply -f volume.yaml
    # kubectl apply -f deployment.yaml
    # kubectl apply -f service.yaml
    # kubectl apply -f nodejsdeployment.yaml
    # kubectl apply -f nodejsservice.yaml